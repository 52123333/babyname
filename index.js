let time = 3000
let maxRow = 5
let maxCol = 5
let itemShowingMap = {}
let lastName = '袁'
let t1 = ["偀", "桑", "桜", "恩", "聪", "悠", "风", "飘", "飞", "森", "多", "天", "央", "光", "煊", "奚", "兮", "祯", "西", "妃", "妆", "香", "熙", "馡", "冬", "妮", "冰", "熹", "秋", "姑", "金", "科", "姗", "姜", "姝", "姣", "姬", "姯", "臻", "姿", "娇", "娉", "舒", "初", "娟", "樱", "婀", "骄", "芊", "抒", "芝", "芬", "花", "芳", "苏", "高", "章", "嫣", "端", "英", "欢", "欣", "茵", "千", "歆", "歌", "孤", "卿", "安", "玑", "宣", "箫", "宫", "宵", "莺", "菁", "珂", "珊", "双", "珍", "诗", "珠", "司", "尐", "君", "琛", "萧", "琨", "萱", "氷", "瑛", "江", "瑰", "山", "葱", "葳", "钊", "璎", "钗", "甄", "锌", "甘", "贞", "生", "津", "洲", "攸", "商", "斯", "薰", "新", "方", "施", "川", "淞", "痴", "添", "一", "七", "清", "嘉", "三", "希", "专", "昕", "东", "丝", "星", "春", "温", "昭", "帮", "丰", "丹", "鹃", "之", "晖", "湘", "书", "晰", "晶", "湾", "庄", "暄", "滇", "今", "雍", "仙", "囡", "曦", "雰", "开", "霄", "伊", "霏", "优", "霜", "真", "张", "伤", "缨", "漪", "潇", "青", "彨", "轩", "佳", "松", "辉", "羙", "依", "枫", "心", "柒", "忠", "忧", "修", "柯", "音", "忻"]
let t2 = ["怀", "怡", "倪", "倰", "格", "桃", "桐", "恬", "灵", "颀", "袁", "梅", "炎", "颐", "颜", "梧", "梨", "棠", "裴", "愉", "然", "元", "慈", "楠", "兰", "奴", "祺", "楼", "如", "榆", "妍", "榕", "农", "妤", "妶", "离", "禾", "凌", "槐", "姚", "凝", "姞", "凡", "秦", "姮", "凰", "言", "成", "娘", "则", "娥", "爰", "娴", "婕", "扬", "良", "驰", "婵", "婷", "承", "芃", "芙", "媱", "芸", "芹", "苓", "嫔", "苗", "勤", "童", "嫦", "嫱", "竹", "茗", "笛", "荃", "孒", "博", "荣", "学", "荭", "玄", "莓", "宜", "玫", "环", "莱", "莲", "玲", "宸", "容", "莹", "评", "珆", "珉", "菊", "词", "珑", "寒", "菱", "珴", "琅", "吉", "萌", "萍", "名", "萝", "吟", "尤", "琦", "萦", "琪", "含", "琳", "琴", "琼", "瑜", "豪", "葵", "瑶", "沂", "璇", "岑", "岚", "咛", "璞", "璠", "河", "咸", "铃", "瓃", "蓉", "泓", "哲", "银", "瓶", "泽", "洁", "崇", "洋", "甜", "贤", "洮", "田", "由", "流", "嵘", "蕤", "涟", "涵", "淇", "藤", "闲", "淳", "闳", "明", "阑", "丞", "渟", "鸣", "阳", "常", "鸾", "鸿", "湄", "陈", "湉", "乔", "晗", "晨", "平", "晴", "白", "隅", "于", "源", "云", "纨", "庭", "亭", "纯", "溶", "人", "黄", "雄", "盈", "黎", "滢", "仪", "绫", "园", "雯", "维", "曹", "国", "眉", "霓", "漓", "霖", "弘", "霞", "弥", "漩", "伶", "彤", "来", "杨", "彭", "杭", "杰", "蝶", "蝾", "融", "林", "龙", "澜", "侬", "辰", "瞳", "达", "迎", "城", "翎", "柔", "连", "柠", "濡", "韦", "迪", "韶", "迷"]
let t3 = ["倚", "火", "恺", "梓", "颖", "炜", "惋", "允", "祖", "楚", "典", "冉", "冷", "秉", "野", "姐", "姳", "舞", "爽", "婉", "芷", "嫂", "苇", "苒", "北", "午", "草", "荏", "筱", "宇", "宝", "玮", "许", "访", "友", "古", "小", "尔", "尕", "谨", "琬", "启", "琰", "水", "永", "尹", "展", "米", "瑾", "粉", "咏", "璟", "品", "泯", "锦", "紫", "甫", "蔼", "蕊", "敏", "海", "蕾", "斐", "喜", "旎", "巧", "闵", "淼", "昶", "渺", "乃", "晓", "井", "暖", "以", "绮", "朗", "伟", "霭", "朵", "佁", "李", "彩", "影", "美", "羽", "染", "远", "保", "矢", "俨", "柳"]
let t4 = ["树", "倩", "逸", "怿", "桂", "偌", "道", "桦", "恨", "顺", "顾", "灿", "悌", "悦", "梦", "碧", "墨", "炫", "傲", "梵", "邵", "烁", "郁", "郑", "裕", "惠", "胤", "磬", "意", "夜", "太", "焱", "慕", "奕", "煜", "奥", "慧", "照", "醉", "妙", "馥", "妹", "冽", "秀", "觅", "凤", "姲", "致", "姹", "懿", "娅", "刖", "列", "娣", "爱", "穆", "婧", "牧", "艳", "艺", "媚", "芮", "立", "苑", "嫒", "竣", "茉", "笑", "献", "振", "荇", "卉", "半", "荌", "荔", "孟", "季", "步", "莉", "玉", "玥", "寄", "叆", "密", "又", "富", "毓", "菡", "叡", "珺", "诺", "琇", "向", "谧", "琭", "琲", "籁", "豆", "汇", "汉", "瑗", "瑞", "瑟", "呤", "豫", "璐", "沐", "沛", "粟", "璧", "钰", "蓓", "洌", "锐", "洛", "贝", "素", "蔡", "唱", "画", "政", "畅", "蕙", "赛", "赞", "浩", "赫", "蕴", "善", "越", "薏", "润", "綪", "跃", "淡", "旦", "旭", "问", "路", "布", "帅", "昊", "易", "世", "映", "昱", "渲", "际", "义", "晋", "晏", "晔", "湛", "鹤", "幸", "智", "幻", "幼", "庆", "皓", "亚", "亦", "麦", "暮", "线", "亿", "雁", "默", "绚", "黛", "绛", "滟", "绢", "绣", "代", "继", "绪", "仲", "建", "曼", "盼", "霁", "月", "霈", "弋", "望", "木", "未", "漾", "杏", "靖", "彗", "静", "束", "彦", "佩", "轶", "睿", "澈", "羡", "忆", "俏", "俐", "运", "志", "翠", "韧", "俪", "韫", "翰", "念", "韵"]
let s1 = t1.length
let s2 = t2.length
let s3 = t3.length
let s4 = t4.length
let ts = [t1, t2, t3, t4]
let ss = [s1, s2, s3, s4]

let toneParam = urlParam('t') || '12,31,32,41,42'

setInterval(() => {
    let indexes = randomHidedIndex()
    if (indexes === null) {
        return
    }
    let item = randomHidedItem(indexes)
    let text = $('<span style="display:none;">' + randomName() + '</span>')
    setItemShow(indexes[0], indexes[1], true)
    item.html(text)
    text.fadeIn(1000)
    setTimeout(() => {
        text.fadeOut(2000)
        setItemShow(indexes[0], indexes[1], false)
    }, 5000)
}, 1000)

function randomName() {
    let tonePairs = toneParam.split(',')
    let tonePair = tonePairs[randomIndex(tonePairs.length)]
    let toneSplits = tonePair.split('')
    let name1 = randomWord(parseInt(toneSplits[0]))
    let name2 = randomWord(parseInt(toneSplits[1]))
    return lastName + name1 + name2
}

function randomWord(tone) {
    return ts[tone - 1][randomIndex(ss[tone - 1])]
}

function urlParam(p) {
    if (!location.search) {
        return null
    }
    let splits = location.search.split('?')
    let split = splits[splits.length - 1]
    if (!split) {
        return null
    }
    let pairs = split.split('&')
    for (let i = 0; i < pairs.length; i++) {
        let pair = pairs[i]
        if (!pair) {
            continue
        }
        let kv = pair.split('=')
        if (kv.length < 2) {
            continue
        }
        if (kv[0] === p) {
            return kv[1]
        }
    }
}

function randomHidedIndex() {
    let count = 0
    let rowIndex, colIndex
    while (count < maxRow * maxCol) {
        rowIndex = randomIndex(maxRow)
        colIndex = randomIndex(maxCol)
        count++
        if (!getItemShow(rowIndex, colIndex)) {
            return [rowIndex, colIndex]
        }
        console.log('item is showing, r=' + rowIndex + ', c=' + colIndex)
    }
    return null
}

function randomHidedItem(indexes) {
    return $($($('div.row')[indexes[0]]).find('div.col')[indexes[1]])
}

function randomIndex(max) {
    return parseInt(Math.random() * max)
}

function getItemShow(rowIndex, colIndex) {
    return itemShowingMap['r' + rowIndex + 'c' + colIndex] || false
}

function setItemShow(rowIndex, colIndex, show) {
    itemShowingMap['r' + rowIndex + 'c' + colIndex] = show
}
